<body onload='getResult();'>

<h3>Simplish self-authored JS challenge</h3>

Hosted <a href="http://www.codewars.com/kata/5592e2f038f7c1dde700003b/train/javascript">here</a> on codewars (though apparently you'll need to be logged in to see it.)


<div class="left-align">
	<h2>Problem</h2>
	You are in charge of services for National Rail. You want to maximise station utilisation so you've been trying to fiddle with the timetables. However, just shifting the times of one train can cause a station down the line to have too many trains trying to stop at the same time. It doesn't have enough platforms. Either the timetable needs changing or maybe a station needs expanding. This sounds like a job for a computer!
	<br>
	<h2>Your Mission</h2>
	Write a function which takes the dayâ€™s timetable for a single station passed as an unsorted 2D array. Each item of the outer array is a train. The train is an array of arrival time followed by its departure time. Timings are listed as minute integers counting from midnight <p></p><i>e.g. 1am = 60 min, 2am = 120 min </i> Assume that trains occupy the platform for the whole minute i.e. a train leaving at 722 and one arriving at 722 overlap. Assume you will always be passed a 2d array with valid departure and arrival times.
	<br>
	Your function should return an integer of the number of station platforms required to accomodate the timetable. 
	<br>
	<h2>And now a tweak or a rewrite...</h2>
	The thing is, this level of detailed information is only essential for occasional expansion proposals. If we're validating timetabling we only need to know if the timetable fits, not precisely how badly it doesn't fit. The timetabling software will be used every day and needs to be fast. To help achieve that efficiency there is an optional argument called optMaxPlatforms. Just <b>return false</b> if the number is going to exceed this maximum.

	Try to optimise your function for performance both with and without this optional argument.

	<hr>
	</div>

	<p >Input array of trains</p>

	<div id="test-array"></div>

<br>
<!-- <p>Maximum platforms?</p> -->
<input type="textbox" id="shouldLimit" style="display:none;" name="shouldLimit"></input>

<br>
<br>
<h3 id="platform-result">Processing...</h3>

</body>
<script language="javascript">
	
	
		var times = [
					  [1400,1462],
					  [1430,1432],
					  [1431,1433],
					  [1300,1301],
					  [1300,1301],
					  [1301,1307],
					  [1294,1301],
					  [1400,1401],
					  [1400,1403],
					  [1399,1405],
					  [1199,1200],
					  [1199,1200],
					  [1199,1200],
					  [1199,1200],
					  [1198,1199],
					  [1198,1199],
					  [1198,1199]
					]



	function requiredPlatforms(timetable, optMaxPlatforms) {

		// Rearrange arrivals and departures into a new 2 column 2D array.
		// The first column is the time. The second column indicates an arrival or departure with a +1 or -1
		var arrInOut = []
		timetable.forEach(function(v) {
			for (j=0;j<=1;j++){ arrInOut.push([v[j], j===1 ? -1 : 1])};
		});
	  
		// Sort it by time. If times are in the same minute, put arrival before departure
		arrInOut = arrInOut.sort(function(a,b) {
	      var diff = a[0] - b[0]
	      return diff===0 ? b[1] - a[1]: diff ;
	      });

		// Iterate through using the second column to increment or decrement a counter.	Keep track of the peak number reached.
		var peakPlatforms=0, currPlatforms=0;
		for (i=0;i<arrInOut.length;i++){
			currPlatforms += arrInOut[i][1]
			peakPlatforms = currPlatforms > peakPlatforms ? currPlatforms : peakPlatforms;
			if (peakPlatforms > optMaxPlatforms) return false;
		};
		return peakPlatforms
	};


	
	function getResult() {
		//var times = document.getElementById('platform-test-array').value;

		 var shouldLimit = document.getElementById('shouldLimit').innerHTML 
		shouldLimit =  typeof shouldLimit == "Integer" ? shouldLimit : undefined;
		document.getElementById('test-array').innerHTML = times
		var answer = requiredPlatforms(times,shouldLimit)
		document.getElementById('platform-result').innerHTML = answer ? "Needs " + answer  + " platforms" : "Not enough platforms";
	};
</script>

<div>
  <a href="/">Back</a>
</div>